"0","# Declaração de funções"
"0","set.seed(1)"
"0",""
"0","faz_tab_bayes <- function(samp, real, q){"
"0","  "
"0","  # recebe um objeto do tipo samp "
"0","  # real é um vetor com os valores reais dos parametros"
"0","  # q é o tamanho do vetor de betas"
"0","  aux = cbind(samp$beta)"
"0","  me = apply(aux, 2, mean)   # média"
"0","  md = apply(aux, 2, median) # mediana"
"0","  sd = apply(aux, 2, sd)     # desvio padrão"
"0","  aux = as.mcmc(aux)"
"0","  hpd = HPDinterval(aux)"
"0","  tab = cbind(unlist(real), me, md, sd, hpd[,'lower'], hpd[,'upper'], hpd[,'upper'] - hpd[,'lower'])"
"0","  rownames(tab) = c(paste0('beta', 0:(q-1)))"
"0","  colnames(tab) = c('true', 'mean', 'median', 's.d.', 'HPD_inf', 'HPD_sup', 'Amplitude')"
"0","  res <- round(tab, 4)              # mostrar saída com 4 casas decimais "
"0","  return(res)"
"0","  "
"0","}"
"0",""
"0",""
"0","faz_tab_classica <- function(mod, q){"
"0","  # mod é um glm"
"0","  # q é o tamanho do vetor de betas"
"0","  tab_classica <- summary(mod)$coefficients"
"0","  rownames(tab_classica) <- c(paste0('beta', 0:(q-1)))"
"0","  res <- round(tab_classica, 4)"
"0","  return(res)"
"0","}"
"0",""
"0",""
"0","gera_bayes <- function(n, prob_X2){"
"0","  "
"0","  #n <- 200"
"0","  beta <- c(1.5, 0.5, -0.5, 1.0, -1.0)"
"0","  q <- length(beta)"
"0","  real <- list(beta)"
"0","  names(real) <- c('beta')"
"0","  "
"0","  x <- array(1, c(n, q))"
"0","  "
"0","  x[,2] <- rbinom(n, 1, prob_X2)"
"0","  "
"0","  "
"0","  for(i in 3:q){x[,i] <- runif(n, -1, 1)}"
"0","  "
"0","  eta <- x %*% as.matrix(beta) |> as.vector()"
"0","  "
"0","  theta <- exp(eta) / (1 + exp(eta))"
"0","  "
"0","  y <- numeric(n)"
"0","  for(i in 1:n){y[i] <- rbinom(1, 1, theta[i])}"
"0","  "
"0","  m_beta <- rep(0, q)"
"0","  s_beta <- 10*diag(q)"
"0","  "
"0","  data <- list("
"0","    n = n, "
"0","    q = q, "
"0","    y = y, "
"0","    x = x,"
"0","    m_beta = m_beta,"
"0","    s_beta = s_beta"
"0","  )"
"0","  "
"0","  pars <- c(""beta"")"
"0","  "
"0","  # Lista de sementes de inicialização (2 cadeias):"
"0","  init = list()"
"0","  init[[1]] <- list(beta=rep(0,q))"
"0","  init[[2]] <- list(beta=runif(q,-1,1))"
"0","  "
"0","  iter = 2000"
"0","  warmup = 1000"
"0","  chains = 2"
"0","  "
"0","  out <- stan(file = ""./Stan/Reglogit.stan"", data = data,"
"0","                 iter = iter, warmup = warmup, chains = chains,"
"0","                 pars = pars, init = init, verbose = FALSE)"
"0","  "
"0","  return(out)"
"0","  "
"0","}"
"0",""
"0",""
"0","gera_bayes_probit <- function(n){"
"0","  "
"0","  #n <- 200"
"0","  beta <- c(1.5, 0.5, -0.5, 1.0, -1.0)"
"0","  q <- length(beta)"
"0","  real <- list(beta)"
"0","  names(real) <- c('beta')"
"0","  "
"0","  x <- array(1, c(n, q))"
"0","  "
"0","  x[,2] <- rbinom(n, 1, 0.5)"
"0","  "
"0","  "
"0","  for(i in 3:q){x[,i] <- runif(n, -1, 1)}"
"0","  "
"0","  eta <- x %*% as.matrix(beta) |> as.vector()"
"0","  "
"0","  theta <- pnorm(eta)"
"0","  "
"0","  y <- numeric(n)"
"0","  for(i in 1:n){y[i] <- rbinom(1, 1, theta[i])}"
"0","  "
"0","  m_beta <- rep(0, q)"
"0","  s_beta <- 10*diag(q)"
"0","  "
"0","  data <- list("
"0","    n = n, "
"0","    q = q, "
"0","    y = y, "
"0","    x = x,"
"0","    m_beta = m_beta,"
"0","    s_beta = s_beta"
"0","  )"
"0","  "
"0","  pars <- c(""beta"")"
"0","  "
"0","  # Lista de sementes de inicialização (2 cadeias):"
"0","  init = list()"
"0","  init[[1]] <- list(beta=rep(0,q))"
"0","  init[[2]] <- list(beta=runif(q,-1,1))"
"0","  "
"0","  iter = 2000"
"0","  warmup = 1000"
"0","  chains = 2"
"0","  "
"0","  out <- stan(file = ""./Stan/Regprobit.stan"", data = data,"
"0","                 iter = iter, warmup = warmup, chains = chains,"
"0","                 pars = pars, init = init, verbose = FALSE)"
"0","  "
"0","  return(out)"
"0","  "
"0","}"
"0",""
"0",""
"0","calcula_segs_bayes <- function(tabela){"
"0","  "
"0","  # Calcula a matrix para ser criado o centipede.plot do plotrix"
"0","  # a primeira linha é a média"
"0","  # a segunda linha é o limite inferior"
"0","  # a terceira linha é o limite superior"
"0"," "
"0","  medias <- tabela[,2]"
"0","  lower_limit <- tabela[,5]"
"0","  upper_limit <- tabela[,6]"
"0","  segs <- matrix(c(medias, lower_limit, upper_limit), byrow=T, nrow=3, ncol=5)"
"0","  return(segs)"
"0","  "
"0","}"
"0",""
"0",""
"0","calcula_segs_classica <- function(tabela){"
"0","  "
"0","  z <- abs(qnorm(0.025))"
"0","  pontual_estimation <- tabela[,1]"
"0","  std_error <- tabela[,2]"
"0","  lower_limit <- pontual_estimation- z*std_error"
"0","  upper_limit <- pontual_estimation + z*std_error"
"0","  segs <- segs <- matrix(c(pontual_estimation, lower_limit, upper_limit), byrow=T, nrow=3, ncol=5)"
"0","  "
"0","  return(segs)"
"0","  "
"0","}"
"0",""
"0",""
"0","gera_dados <- function(n, prob_X2, q, beta){"
"0","  "
"0","  x <- array(1, c(n, q))"
"0",""
"0","  x[,2] <- rbinom(n, 1, prob_X2)"
"0","  "
"0","  "
"0","  for(i in 3:q){x[,i] <- runif(n, -1, 1)}"
"0","  "
"0","  eta <- x %*% as.matrix(beta) |> as.vector()"
"0","  "
"0","  theta <- exp(eta) / (1 + exp(eta))"
"0","  "
"0","  y <- numeric(n)"
"0","  for(i in 1:n){y[i] <- rbinom(1, 1, theta[i])}"
"0",""
"0","  res <- data.frame("
"0","    x = x,"
"0","    y = y,"
"0","    eta = eta,"
"0","    theta = theta"
"0","  )"
"0","  "
"0","  return(res)"
"0","  "
"0","}"
"0",""
"0","gera_dados_probit <- function(n, q, beta){"
"0","  "
"0","  x <- array(1, c(n, q))"
"0",""
"0","  x[,2] <- rbinom(n, 1, 0.5)"
"0","  "
"0","  "
"0","  for(i in 3:q){x[,i] <- runif(n, -1, 1)}"
"0","  "
"0","  eta <- x %*% as.matrix(beta) |> as.vector()"
"0","  "
"0","  theta <- pnorm(eta)"
"0","  "
"0","  y <- numeric(n)"
"0","  for(i in 1:n){y[i] <- rbinom(1, 1, theta[i])}"
"0",""
"0","  res <- data.frame("
"0","    x = x,"
"0","    y = y,"
"0","    eta = eta,"
"0","    theta = theta"
"0","  )"
"0","  "
"0","  return(res)"
"0","  "
"0","}"
"0",""
